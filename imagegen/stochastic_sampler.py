"""
Copyright 2016 nfactorial

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import random
from .sampler_base import SamplerBase


class StochasticSampler(SamplerBase):
    """
    Implements an object that generates a number of random samples within an area of interest.
    """
    def __len__(self):
        """
        Calculates the number of samples that will be generated by this object.
        :return: The number of samples generated by this sampler.
        """
        return self.x_samples * self.y_samples

    def next_sample(self, pos):
        """
        Generates a list of samples for the specified pixel.
        :param pos: Tuple containing the x,y coordinates of the pixel being evaluated.
        :return: Tuple containing the x,y floating point coordinates of the sample.
        """
        for y in range(self.y_samples):
            for x in range(self.x_samples):
                yield pos[0] + random.random() * self.pixel_scale[0], pos[1] + random.random() * self.pixel_scale[1]
