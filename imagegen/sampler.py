import random


class StratifiedSampler:
    """
    Implements a Sampler object that generates a number of random samples within an area of interest.
    """
    def __init__(self, x_samples, y_samples):
        """
        Prepares the sampler for use by the application.
        :param x_samples: The number of samples to be generated along the horizontal axis.
        :param y_samples: The number of samples to be generated along the vertical axis.
        """
        self.x_samples = x_samples
        self.y_samples = y_samples
        self.dx = 1.0 / x_samples
        self.dy = 1.0 / y_samples

    def __len__(self):
        """
        Calculates the number of samples that will be generated by this sampler.
        :return: The number of samples generated by this sampler.
        """
        return self.x_samples * self.y_samples

    def next_sample(self, x, y):
        for x_loop in range(self.x_samples):
            for y_loop in range(self.y_samples):
                x_jitter = random.random()
                y_jitter = random.random()
                yield x + (x_loop * x_jitter) * self.dx, y + (y_loop * y_jitter) * self.dy
